# gin-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-api-server
  template:
    metadata:
      labels:
        app: user-api-server
    spec:
      containers:
        - name: user-api-server-container
          image: user-api-server:latest
          imagePullPolicy: Never
          env:
            - name: DEPLOYMENT_TYPE
              value: "kubernetes"
            - name: CONFIG_PATH
              value: "/config"
          volumeMounts:
            - name: openim-config
              mountPath: "/config"
              readOnly: true
          ports:
            - containerPort: 10302
            - containerPort: 20113
      volumes:
        - name: openim-config
          configMap:
            name: openim-config
---
apiVersion: v1
kind: Service
metadata:
  name: user-api-service
spec:
  selector:
    app: user-api-server
  ports:
    - name: http-10302
      protocol: TCP
      port: 10302
      targetPort: 10302
    - name: prometheus-20113
      protocol: TCP
      port: 20113
      targetPort: 20113
  type: ClusterIP

---
# user-rpc-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-rpc-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-rpc-server
  template:
    metadata:
      labels:
        app: user-rpc-server
    spec:
      containers:
        - name: user-rpc-server-container
          image: user-rpc-server:latest
          imagePullPolicy: Never
          env:
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo_initdb_root_username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo_initdb_root_password
            - name: DEPLOYMENT_TYPE
              value: "kubernetes"
            - name: CONFIG_PATH
              value: "/config"
          volumeMounts:
            - name: openim-config
              mountPath: "/config"
              readOnly: true
          ports:
            - containerPort: 10310
            - containerPort: 20100
      volumes:
        - name: openim-config
          configMap:
            name: openim-config
---
apiVersion: v1
kind: Service
metadata:
  name: user-rpc-service
spec:
  selector:
    app: user-rpc-server
  ports:
    - name: http-10310
      protocol: TCP
      port: 10310
      targetPort: 10310
    - name: prometheus-20100
      protocol: TCP
      port: 20100
      targetPort: 20100
  type: ClusterIP
---
# mongo-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:6.0.2
          command: [ "/bin/bash", "-c", "docker-entrypoint.sh mongod --wiredTigerCacheSizeGB 1 --auth" ]
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo_initdb_root_username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo_initdb_root_password
          volumeMounts:
        #    - name: temp-script
         #     mountPath: /scripts
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - name: mongodb-port
      protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP

---
# openim-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: openim-config
data:
  discovery.yml: |
    enable: "kubernetes"
  log.yml: |
    # Log storage path, default is acceptable, change to a full path if modification is needed
    storageLocation:
    # Log rotation period (in hours), default is acceptable
    rotationTime: 24
    # Number of log files to retain, default is acceptable
    remainRotationCount: 2
    # Log level settings: 3 for production environment; 6 for more verbose logging in debugging environments
    remainLogLevel: 6
    # Whether to output to standard output, default is acceptable
    isStdout: true
    # Whether to log in JSON format, default is acceptable
    isJson: false
    # output simplify log when KeyAndValues's value len is bigger than 50 in rpc method log
    isSimplify: true
  mongodb.yml: |
    # URI for database connection, leave empty if using address and credential settings directly
    uri: ''
    # List of MongoDB server addresses
    address: [ mongo-service:27017 ]
    # Name of the database
    database: admin
    # Username for database authentication
    username: openIM
    # Password for database authentication
    password: openIM123
    # Maximum number of connections in the connection pool
    maxPoolSize: 100
    # Maximum number of retry attempts for a failed database connection
    maxRetry: 10
  openim-api.yml: |
    secret: openIM123
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched, must be consistent with the number of prometheus.ports
      ports: [ 10302 ]
    prometheus:
      # Whether to enable prometheus
      enable: true
      # Prometheus listening ports, must match the number of api.ports
      ports: [ 20113 ]
      # This address can be accessed via a browser
      grafanaURL: http://127.0.0.1:13000/
  openim-rpc-user.yml: |
    rpc:
      # API or other RPCs can access this RPC through this IP; if left blank, the internal network IP is obtained by default
      registerIP: ''
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, if blank, the internal network IP is automatically obtained by default
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched, and must be consistent with the number of prometheus.ports
      ports: [ 10310 ]
    prometheus:
      # Whether to enable prometheus
      enable: true
      # Prometheus listening ports, must be consistent with the number of rpc.ports
      ports: [ 20100 ]
  share.yml: |
    rpcRegisterName:
      user: user-rpc-service
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
type: Opaque
data:
  mongo_initdb_root_username: b3BlbklN  # base64 for "openIM"
  mongo_initdb_root_password: b3BlbklNMTIz  # base64 for "openIM123"


